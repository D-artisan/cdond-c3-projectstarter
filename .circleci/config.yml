version: 2.1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "frontend/package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: | 
            cd frontend
            npm install
      - run:
          name: Build Frontend
          command: |
            cd frontend
            npm run build   
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "frontend/package.json" }}

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "backend/package.json" }}
            - v1-dependencies
      - run:
          name: Install Dependencies
          command: | 
            cd backend
            npm install
      - run:
          name: Build Backend
          command: |
            cd backend
            npm run build
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "backend/package.json" }}
  
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "frontend/package.json" }}
            - v1-dependencies-
      - run:
          name: Run Frontend Test
          command: |
            cd frontend
            npm install
            npm run test  
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "frontend/package.json" }}

  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "backend/package.json" }}
            - v1-dependencies-
      - run:
          name: Run Backend Test
          command: |
            cd backend
            npm install
            npm run test  
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "backend/package.json" }}
        
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [scanfrontend-test]
      - run:
          name: Scan Frontend
          command: |
            cd frontend
            npm install
            # npm install oauth-sign@^0.9.0
            npm audit fix --audit-level=critical --force
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - save_cache:
          paths: [frontend/node_modules]
          key: scanfrontend-test

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [scanbackend-test]
      - run:
          name: Scan Backend
          command: |
            cd backend
            npm install
            # npm install oauth-sign@^0.9.0
            npm audit fix --audit-level=critical --force
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - save_cache:
          paths: [backend/node_modules]
          key: scanbackend-test

  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            yum install -y tar gzip
      - run:
          name: Ensure backend infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"  \
              --tags project=udapeople
      - run:
          name: Ensure front-end infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"  \
              --tags project=udapeople 
      - run:
          name: Add backend ip to ansible inventory
          command: |
            cd .circleci/ansible
            cat inventory.txt 
            aws ec2 describe-instances \
            -- quwery 'Reservations[*].Instances[*].PublicIpAddress' \
            -- output text --filter Name=tag:Name,Values=backend-${CIRCLE_WORKFLOW_ID:0:7} >> inventory.txt
            cat inventory.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory.txt

workflows:
  build-and-test:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
      - scan-backend:
          requires: [build-backend]
      - deploy-infrastructure:
          requires: [test-frontend, test-backend, scan-frontend, scan-backend]
          filters:
            branches:
              only: [udapeople-1]